---
// import TableOfContents from './TableOfContents';
// const { headings, githubEditUrl, lang } = Astro.props;
// const thisLang = lang === 'en' ? '' : '/' + lang;
const path = '../../pages' + "thisLang" + '/blog/*.{md,mdx}'
const posts = (await Astro.glob('../../pages/blog/*.{md,mdx}')).sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);
// const posts = await Astro.glob('../../pages/blog/*.{md,mdx}');
---

<nav>
<div style="padding-bottom: 4rem">
	<ul class="list">
		{posts.map((post) => (
			<li>
            {/*
							<time datetime={post.frontmatter.pubDate}>
								{new Date(post.frontmatter.pubDate).toLocaleDateString('en-us', {
									year: 'numeric',
									month: 'short',
									day: 'numeric',
								})}
							</time>
			*/}
				<a class="link truncate" href={post.url}>{post.frontmatter.title}</a>
			</li>
		))}

  </ul>
</div>
</nav>

<style>
.list {
	font-size: 14px;
	list-style: none;
}

.link {
	display: block;
	padding: .5rem 0;
	padding-left: 1rem;
	color: hsl(var(--clr-light-text));
	border-left: 1px solid rgb(177, 177, 177);
}

.link:hover {
	color: hsl(var(--clr-secondary));
	border-left: 1px solid hsl(var(--clr-secondary));
}

.truncate {
  width: 300px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


</style>

<script>

	const location = window.location.pathname;
	const links = document.querySelectorAll('.link');

	links.forEach(link => {
		if(link.href.includes(`${location}`)) {
			link.style.color = 'hsl(var(--clr-secondary))';
			link.style.borderLeft = '1px solid hsl(var(--clr-secondary))';
		}
	});

</script>