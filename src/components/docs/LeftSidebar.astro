---
import ReactAccordion from '../Accordion/ReactAccordion';
import TableOfContents from './TableOfContents';
const { headings, githubEditUrl, lang } = Astro.props;

const docs = (await Astro.glob('../../pages/docs/*.{md,mdx}'));

const QUICKSTART = docs.filter(function(item){
    return item.frontmatter.cat == "quick-start";
})

const ADDREFERENCES = docs.filter(function(item){
    return item.frontmatter.cat == "add-references";
})

const OVERLEAFSETUP = docs.filter(function(item){
    return item.frontmatter.cat == "overleaf-setup";
})

const HOWTOS = docs.filter(function(item){
    return item.frontmatter.cat == "how-tos";
})

const BIBLATEX = docs.filter(function(item){
    return item.frontmatter.cat == "biblatex";
})

const BIBTEX = docs.filter(function(item){
    return item.frontmatter.cat == "bibtex";
})

const NATBIB = docs.filter(function(item){
    return item.frontmatter.cat == "natbib";
})

---

  
<nav>
   <div style="padding-bottom: 8rem">
      <ReactAccordion label="Quick Start" isOpen={true} client:load>
         <ul class="list" >
            {QUICKSTART.map((doc) => (
            <li>
               <a class="link" href={doc.url}>{doc.frontmatter.side}</a>
            </li>
            ))}
         </ul>

      </ReactAccordion>

       <ReactAccordion label="Add References" isOpen={true} client:load>
     
         <ul class="list" >
            {ADDREFERENCES.map((doc) => (
            <li>
               <a class="link" href={doc.url}>{doc.frontmatter.side}</a>
            </li>
            ))}
         </ul>

      </ReactAccordion>
      
      <ReactAccordion label="Overleaf Setup" isOpen={true} client:load>

         <ul class="list" >
            {OVERLEAFSETUP.map((doc) => (
            <li>
               <a class="link" href={doc.url}>{doc.frontmatter.side}</a>
            </li>
            ))}
         </ul>

      </ReactAccordion>
      
      <ReactAccordion label="Howtos" isOpen={true} client:load>

         <ul class="list" >
            {HOWTOS.map((doc) => (
            <li>
               <a class="link" href={doc.url}>{doc.frontmatter.side}</a>
            </li>
            ))}
         </ul>

      </ReactAccordion>

      <ReactAccordion label="BibTex Basics" isOpen={true} client:load>

         <ul class="list" >
            {BIBTEX.map((doc) => (
            <li>
               <a class="link" href={doc.url}>{doc.frontmatter.side}</a>
            </li>
            ))}
         </ul>

      </ReactAccordion>

      <ReactAccordion label="BibLaTeX Basics" isOpen={true} client:load>

         <ul class="list" >
            {BIBLATEX.map((doc) => (
            <li>
               <a class="link" href={doc.url}>{doc.frontmatter.side}</a>
            </li>
            ))}
         </ul>

      </ReactAccordion>

      <ReactAccordion label="Natbib Basics" isOpen={true} client:load>

         <ul class="list" >
            {NATBIB.map((doc) => (
            <li>
               <a class="link" href={doc.url}>{doc.frontmatter.side}</a>
            </li>
            ))}
         </ul>
         
      </ReactAccordion>
   </div>
</nav>

<style>

  .list {
      font-size: 14px;
      list-style: none;
      margin-top: .5rem;
   }

   .link {
	display: block;
	padding: .2rem 0;
	padding-left: 1rem;
	color: hsl(var(--clr-light-text));
	border-left: 1px solid rgb(177, 177, 177);
   }

   .link:hover {
	color: hsl(var(--clr-secondary));
	border-left: 1px solid hsl(var(--clr-secondary));
   }

</style>

<script>

   const location = window.location.pathname;
	const links = document.querySelectorAll('.link');

	links.forEach(link => {
		if(link.href.includes(`${location}`)) {
			link.style.color = 'hsl(var(--clr-secondary))';
			link.style.borderLeft = '1px solid hsl(var(--clr-secondary))';
		}
	});

</script>
