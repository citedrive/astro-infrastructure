---
import DiscoveryHeader from '../../components/header/DiscoveryHeader.astro';
import DiscoveryLayout from '../../layouts/DiscoveryLayout.astro';
import BibtexPreview from '../../components/Discovery/bibtexPreview.astro';
import References from '../../components/Discovery/references.astro';

import Arrow from '/assets/Arrow.svg';
import Quote from '/assets/Quotes.svg';

const { doi } = await Astro.params;
let url = "https://api.crossref.org/works/" + doi;
const response = await fetch(url);
if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);

const data = await response.json();
console.log(await JSON.stringify(data));
// console.log(await data);

let type = data.message.type;
let title = data.message.title[0];
let author = data.message.author.map((author, i, arr) => (`${author.given} ${author.family}`));
let journal = data.message["container-title"];
let year = data.message.published["date-parts"][0][0];
let volume = data.message.volume;
let pages = data.message.page;

// let key = DOI

---

<DiscoveryLayout title={title} description = {doi} lang={"en"}>


<section>

<div class="flex" style="display: inline-flex; flex-direction: column; --gap: 0;">

  <div class="flex top-info" style="flex-wrap: wrap; --gap: 1rem;">
    <a href={data.message.resource.primary.URL}><div class="pill-tag arrow flex" style="align-items: center;"><img width="20" src={Arrow} />{`DOI: ${data.message.DOI}`}</div></a>
    <div class="pill-tag quote flex" style="align-items: center;"><img width="20" src={Quote} /> {`${data.message['is-referenced-by-count']} Citations `}</div>
  </div>

  <div class="freight author" style="margin-bottom: 1rem;">
    {data.message.author.map((author, i, arr) => (
      <span>
      { (i < arr.length - 1 ? `${author.given} ${author.family}` + ', ' : `${author.given} ${author.family}`)}
      </span>
    )
    )}
  </div>

  <h1 class="freight title">{title}</h1>

  <div class="freight year" style="line-height: 30px"><span>{year}</span> - <span class="journal">{journal}</span></div>

</div>

<div class="flex" style="gap: .25rem; flex-wrap: wrap; margin-bottom: 2rem;">
  {data.message.subject.map((subject) => (
    <div class="tag">{subject}</div>
  ))
  }
</div>

<div class="flex" style="align-items: center;" style="margin-bottom: 1rem;">
    <button type="button" class="safe-to-citedrive">Safe To CiteDrive</button>
</div>

</section>

<section>


<BibtexPreview 
  type={type}
  title={title}
  author= {author}
  journal={journal}
  year={year}
  volume={volume}
  pages={pages}
/>

</section>

<section>

<h4 style="margin-bottom: 1rem;">{data.message["reference-count"]} References:</h4>

  {typeof data.message.reference !== "undefined" &&
              <div class="grid references-grid" style="--gap: .5rem">
                {data.message.reference.map((ele) => (
                  <References
                  doi={typeof ele.DOI !== "undefined" ? ele.DOI : "No DOI"}
                  author={ele.author}
                  title={ele["article-title"]}
                  year={ele.year}
                   />
                ))}
                </div>
                }

</section> 

</DiscoveryLayout>



<style>

/* .arrow::before {
  content: '<svg id="a" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96 96"><line x1="3.48" y1="46.55" x2="92.52" y2="46.55" style="fill:none; stroke:#000; stroke-linecap:round; stroke-linejoin:round; stroke-width:5px;"/><path d="m50.84,20.09c3.43,7.66,8.99,14.39,15.98,19.04,5.03,3.35,10.76,5.6,16.7,6.68,2.97.54,5.99.79,9.01.73" style="fill:none; stroke:#000; stroke-linecap:round; stroke-linejoin:round; stroke-width:5px;"/><path d="m50.84,73.01c3.43-7.66,8.99-14.39,15.98-19.04,5.03-3.35,10.76-5.6,16.7-6.68,2.97-.54,5.99-.79,9.01-.73" style="fill:none; stroke:#000; stroke-linecap:round; stroke-linejoin:round; stroke-width:5px;"/></svg>'
} */

/* .quote::before {
  content: url('../../../public/assets/quote.svg');
} */



.top-info {
  margin-bottom: 1.7rem;
}

.freight {
  font-family: freight-display-pro, serif;
  font-style: normal;
}

.title {
  font-size: 2.5rem;
  font-weight: 500;
  line-height: 50px;
  margin-bottom: 1rem;
}

.author {
  font-size: 1.75rem;
  font-weight: 200;
  line-height: 30px;
  /* color:hsl(var(--clr-secondary) / .9); */
  color: background-color: rgb(204, 204, 204);
}

.year {
  font-size: 2rem;
  font-weight: 400;
  border-left: 3px solid black;
  padding-left: .6rem;
  margin-bottom: 2rem;
}

.publisher {
  font-size: .9rem;
  font-weight: 400;
}

.reference {
  border: 1px solid black;
  margin-bottom: 1rem;
}

.journal {
  font-family: sofia-pro;
  font-size: .5em;
}

.pill-tag {
  background-color: white;
  /* border: 1px solid black; */
  border-radius: 14px;
  text-align: left;
  font-size: .95rem;
  /* display: inline-block; */
  white-space: normal;
  padding: .25rem 1rem;
  width: max-content;
  height: fit-content;
  font-weight: 500;
}

a > .pill-tag:hover {
  background-color: rgb(204, 204, 204);
}

.tag {
  background-color: rgb(147, 147, 147);
  color: whitesmoke;
  /* border: 1px solid black; */
  border-radius: 14px;
  text-align: left;
  font-size: .65rem;
  /* display: inline-block; */
  white-space: normal;
  padding: .25rem .5rem;
  font-weight: 500;
}

.safe-to-citedrive {
  cursor: pointer;
  background-color: hsl(var(--clr-secondary));
  padding: 1rem 2rem;
  font-weight: bold;
  color: white;
  border: none;
  border-radius: 14px;
  transition: 1s;
}

.safe-to-citedrive:hover {
    background-color: hsl(var(--clr-secondary) / 80%);
}

.references-grid {
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr))
}

@media(min-width: 600px;) {

.top-info {
  margin-bottom: 0;
}

a > .pill-tag {
  margin-bottom: 1rem;
}

}

</style>

