{"version":3,"file":"index.module.js","sources":["../src/util.js","../src/index.js"],"sourcesContent":["// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n\nconst ENCODED_ENTITIES = /[&<>\"]/;\n\nexport function encodeEntities(str) {\n\t// Ensure we're always parsing and returning a string:\n\tstr += '';\n\n\t// Skip all work for strings with no entities needing encoding:\n\tif (ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i<str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 60: ch = '&lt;'; break;\n\t\t\tcase 62: ch = '&gt;'; break;\n\t\t\tcase 34: ch = '&quot;'; break;\n\t\t\tcase 38: ch = '&amp;'; break;\n\t\t\tdefault: continue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i > last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\treturn out + str.slice(last, i);\n}\n\nexport let indent = (s, char) =>\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nexport let isLargeString = (s, length, ignoreLines) =>\n\tString(s).length > (length || 40) ||\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n\tString(s).indexOf('<') !== -1;\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (val != null && val !== '') {\n\t\t\tif (str) str += ' ';\n\t\t\t// str += jsToCss(prop);\n\t\t\tstr +=\n\t\t\t\tprop[0] == '-'\n\t\t\t\t\t? prop\n\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase());\n\t\t\tstr += ': ';\n\t\t\tstr += val;\n\t\t\tif (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n\t\t\t\tstr += 'px';\n\t\t\t}\n\t\t\tstr += ';';\n\t\t}\n\t}\n\treturn str || undefined;\n}\n\n/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function assign(obj, props) {\n\treturn Object.assign(obj, props);\n}\n\n/**\n * Get flattened children from the children prop\n * @param {Array} accumulator\n * @param {any} children A `props.children` opaque object.\n * @returns {Array} accumulator\n * @private\n */\nexport function getChildren(accumulator, children) {\n\tif (Array.isArray(children)) {\n\t\tchildren.reduce(getChildren, accumulator);\n\t} else if (children != null && children !== false) {\n\t\taccumulator.push(children);\n\t}\n\treturn accumulator;\n}\n","import {\n\tencodeEntities,\n\tindent,\n\tisLargeString,\n\tstyleObjToCss,\n\tgetChildren\n} from './util';\nimport { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nconst SHALLOW = { shallow: true };\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = [];\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\nconst UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\nconst XLINK = /^xlink:?./;\n\nfunction markAsDirty() {\n\tthis.__d = true;\n}\n\n/** Render Preact JSX + Components to an HTML string.\n *\t@name render\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n *\t@param {Object} [options={}]\tRendering options\n *\t@param {Boolean} [options.shallow=false]\tIf `true`, renders nested Components as HTML elements (`<Foo a=\"b\" />`).\n *\t@param {Boolean} [options.xml=false]\t\tIf `true`, uses self-closing tags for elements without children.\n *\t@param {Boolean} [options.pretty=false]\t\tIf `true`, adds whitespace for readability\n *\t@param {RegExp|undefined} [options.voidElements]       RegeEx that matches elements that are considered void (self-closing)\n */\nrenderToString.render = renderToString;\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n *\tThis method is just a convenience alias for `render(vnode, context, { shallow:true })`\n *\t@name shallow\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n */\nlet shallowRender = (vnode, context) => renderToString(vnode, context, SHALLOW);\n\nconst EMPTY_ARR = [];\nfunction renderToString(vnode, context, opts) {\n\tcontext = context || {};\n\topts = opts || {};\n\n\t// Performance optimization: `renderToString` is synchronous and we\n\t// therefore don't execute any effects. To do that we pass an empty\n\t// array to `options._commit` (`__c`). But we can go one step further\n\t// and avoid a lot of dirty checks and allocations by setting\n\t// `options._skipEffects` (`__s`) too.\n\tconst previousSkipEffects = options.__s;\n\toptions.__s = true;\n\n\tlet res;\n\tif (opts.pretty || opts.sortAttributes) {\n\t\tres = _renderToStringPretty(vnode, context, opts);\n\t} else {\n\t\tres = _renderToString(vnode, context, opts);\n\t}\n\n\t// options._commit, we don't schedule any effects in this library right now,\n\t// so we can pass an empty queue to this hook.\n\tif (options.__c) options.__c(vnode, EMPTY_ARR);\n\tEMPTY_ARR.length = 0;\n\toptions.__s = previousSkipEffects;\n\treturn res;\n}\n\nfunction createComponent(vnode, context) {\n\treturn {\n\t\t__v: vnode,\n\t\tcontext,\n\t\tprops: vnode.props,\n\t\t// silently drop state updates\n\t\tsetState: markAsDirty,\n\t\tforceUpdate: markAsDirty,\n\t\t__d: true,\n\t\t// hooks\n\t\t__h: []\n\t};\n}\n\n// Necessary for createContext api. Setting this property will pass\n// the context value as `this.context` just for this component.\nfunction getContext(nodeName, context) {\n\tlet cxType = nodeName.contextType;\n\tlet provider = cxType && context[cxType.__c];\n\treturn cxType != null\n\t\t? provider\n\t\t\t? provider.props.value\n\t\t\t: cxType.__\n\t\t: context;\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, context, opts, inner, isSvgMode, selectValue) {\n\tif (vnode == null || typeof vnode === 'boolean') {\n\t\treturn '';\n\t}\n\n\t// #text nodes\n\tif (typeof vnode !== 'object') {\n\t\treturn encodeEntities(vnode);\n\t}\n\n\tif (Array.isArray(vnode)) {\n\t\tconst rendered = [];\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\trendered.push(\n\t\t\t\t_renderToString(vnode[i], context, opts, inner, isSvgMode, selectValue)\n\t\t\t);\n\t\t}\n\t\treturn rendered.join('');\n\t}\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\n\t// components\n\tif (typeof nodeName === 'function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t} else if (nodeName === Fragment) {\n\t\t\tconst children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\t\t\treturn _renderToString(\n\t\t\t\tchildren,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t} else {\n\t\t\tlet rendered;\n\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\n\n\t\t\t// options._diff\n\t\t\tif (options.__b) options.__b(vnode);\n\n\t\t\t// options._render\n\t\t\tlet renderHook = options.__r;\n\n\t\t\tif (\n\t\t\t\t!nodeName.prototype ||\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\n\t\t\t) {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (c.__d && count++ < 25) {\n\t\t\t\t\tc.__d = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\t// stateless functional components\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state == null) c.state = {};\n\n\t\t\t\tif (c._nextState == null && c.__s == null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\n\t\t\t\t\tc.state = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tc.state,\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t\t\t\t);\n\t\t\t\telse if (c.componentWillMount) {\n\t\t\t\t\tc.componentWillMount();\n\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\t\tc.state =\n\t\t\t\t\t\tc._nextState !== c.state\n\t\t\t\t\t\t\t? c._nextState\n\t\t\t\t\t\t\t: c.__s !== c.state\n\t\t\t\t\t\t\t? c.__s\n\t\t\t\t\t\t\t: c.state;\n\t\t\t\t}\n\n\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\n\t\t\t}\n\n\t\t\tif (options.diffed) options.diffed(vnode);\n\t\t\treturn _renderToString(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = `<${nodeName}`,\n\t\tpropChildren,\n\t\thtml;\n\n\tif (props) {\n\t\tfor (let name in props) {\n\t\t\tlet v = props[name];\n\t\t\tif (name === 'children') {\n\t\t\t\tpropChildren = v;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tif (\n\t\t\t\t!(opts && opts.allAttributes) &&\n\t\t\t\t(name === 'key' ||\n\t\t\t\t\tname === 'ref' ||\n\t\t\t\t\tname === '__self' ||\n\t\t\t\t\tname === '__source')\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (name === 'defaultValue') {\n\t\t\t\tname = 'value';\n\t\t\t} else if (name === 'defaultChecked') {\n\t\t\t\tname = 'checked';\n\t\t\t} else if (name === 'defaultSelected') {\n\t\t\t\tname = 'selected';\n\t\t\t} else if (name === 'className') {\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\n\t\t\t\tname = 'class';\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name === 'htmlFor') {\n\t\t\t\tif (props.for) continue;\n\t\t\t\tname = 'for';\n\t\t\t}\n\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\t// always use string values instead of booleans for aria attributes\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\n\t\t\t\tv = String(v);\n\t\t\t}\n\n\t\t\tlet hooked =\n\t\t\t\topts.attributeHook &&\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked === '') {\n\t\t\t\ts = s + hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tpropChildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (nodeName === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\tnodeName === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = `${s} selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(nodeName))\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid =\n\t\tVOID_ELEMENTS.test(nodeName) ||\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\n\tlet pieces = '';\n\n\tlet children;\n\tif (html) {\n\t\ts = s + html;\n\t} else if (\n\t\tpropChildren != null &&\n\t\tgetChildren((children = []), propChildren).length\n\t) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\t\tnodeName === 'svg'\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\n\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t: isSvgMode,\n\t\t\t\t\tret = _renderToString(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tchildSvgMode,\n\t\t\t\t\t\tselectValue\n\t\t\t\t\t);\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tpieces = pieces + ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length || html) {\n\t\ts = s + pieces;\n\t} else if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length - 1) + ' />';\n\t}\n\n\tif (isVoid && !children && !html) {\n\t\treturn s.replace(/>$/, ' />');\n\t}\n\n\treturn `${s}</${nodeName}>`;\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToStringPretty(\n\tvnode,\n\tcontext,\n\topts,\n\tinner,\n\tisSvgMode,\n\tselectValue\n) {\n\tif (vnode == null || typeof vnode === 'boolean') {\n\t\treturn '';\n\t}\n\n\t// #text nodes\n\tif (typeof vnode !== 'object') {\n\t\treturn encodeEntities(vnode);\n\t}\n\n\tlet pretty = opts.pretty,\n\t\tindentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n\tif (Array.isArray(vnode)) {\n\t\tlet rendered = '';\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\tif (pretty && i > 0) rendered = rendered + '\\n';\n\t\t\trendered =\n\t\t\t\trendered +\n\t\t\t\t_renderToStringPretty(\n\t\t\t\t\tvnode[i],\n\t\t\t\t\tcontext,\n\t\t\t\t\topts,\n\t\t\t\t\tinner,\n\t\t\t\t\tisSvgMode,\n\t\t\t\t\tselectValue\n\t\t\t\t);\n\t\t}\n\t\treturn rendered;\n\t}\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\n\t// components\n\tif (typeof nodeName === 'function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t} else if (nodeName === Fragment) {\n\t\t\tconst children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\tchildren,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t} else {\n\t\t\tlet rendered;\n\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\n\n\t\t\t// options._diff\n\t\t\tif (options.__b) options.__b(vnode);\n\n\t\t\t// options._render\n\t\t\tlet renderHook = options.__r;\n\n\t\t\tif (\n\t\t\t\t!nodeName.prototype ||\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\n\t\t\t) {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (c.__d && count++ < 25) {\n\t\t\t\t\tc.__d = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\t// stateless functional components\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state == null) c.state = {};\n\n\t\t\t\tif (c._nextState == null && c.__s == null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\n\t\t\t\t\tc.state = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tc.state,\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t\t\t\t);\n\t\t\t\telse if (c.componentWillMount) {\n\t\t\t\t\tc.componentWillMount();\n\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\t\tc.state =\n\t\t\t\t\t\tc._nextState !== c.state\n\t\t\t\t\t\t\t? c._nextState\n\t\t\t\t\t\t\t: c.__s !== c.state\n\t\t\t\t\t\t\t? c.__s\n\t\t\t\t\t\t\t: c.state;\n\t\t\t\t}\n\n\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\n\t\t\t}\n\n\t\t\tif (options.diffed) options.diffed(vnode);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = '<' + nodeName,\n\t\tpropChildren,\n\t\thtml;\n\n\tif (props) {\n\t\tlet attrs = Object.keys(props);\n\n\t\t// allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n\t\tif (opts && opts.sortAttributes === true) attrs.sort();\n\n\t\tfor (let i = 0; i < attrs.length; i++) {\n\t\t\tlet name = attrs[i],\n\t\t\t\tv = props[name];\n\t\t\tif (name === 'children') {\n\t\t\t\tpropChildren = v;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tif (\n\t\t\t\t!(opts && opts.allAttributes) &&\n\t\t\t\t(name === 'key' ||\n\t\t\t\t\tname === 'ref' ||\n\t\t\t\t\tname === '__self' ||\n\t\t\t\t\tname === '__source')\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (name === 'defaultValue') {\n\t\t\t\tname = 'value';\n\t\t\t} else if (name === 'defaultChecked') {\n\t\t\t\tname = 'checked';\n\t\t\t} else if (name === 'defaultSelected') {\n\t\t\t\tname = 'selected';\n\t\t\t} else if (name === 'className') {\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\n\t\t\t\tname = 'class';\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name === 'htmlFor') {\n\t\t\t\tif (props.for) continue;\n\t\t\t\tname = 'for';\n\t\t\t}\n\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\t// always use string values instead of booleans for aria attributes\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\n\t\t\t\tv = String(v);\n\t\t\t}\n\n\t\t\tlet hooked =\n\t\t\t\topts.attributeHook &&\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked === '') {\n\t\t\t\ts = s + hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tpropChildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (nodeName === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\tnodeName === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = s + ` selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\t// account for >1 multiline attribute\n\tif (pretty) {\n\t\tlet sub = s.replace(/\\n\\s*/, ' ');\n\t\tif (sub !== s && !~sub.indexOf('\\n')) s = sub;\n\t\telse if (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t}\n\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(nodeName))\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid =\n\t\tVOID_ELEMENTS.test(nodeName) ||\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\n\tlet pieces = [];\n\n\tlet children;\n\tif (html) {\n\t\t// if multiline, indent.\n\t\tif (pretty && isLargeString(html)) {\n\t\t\thtml = '\\n' + indentChar + indent(html, indentChar);\n\t\t}\n\t\ts = s + html;\n\t} else if (\n\t\tpropChildren != null &&\n\t\tgetChildren((children = []), propChildren).length\n\t) {\n\t\tlet hasLarge = pretty && ~s.indexOf('\\n');\n\t\tlet lastWasText = false;\n\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\t\tnodeName === 'svg'\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\n\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t: isSvgMode,\n\t\t\t\t\tret = _renderToStringPretty(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tchildSvgMode,\n\t\t\t\t\t\tselectValue\n\t\t\t\t\t);\n\n\t\t\t\tif (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tif (pretty) {\n\t\t\t\t\t\tlet isText = ret.length > 0 && ret[0] != '<';\n\n\t\t\t\t\t\t// We merge adjacent text nodes, otherwise each piece would be printed\n\t\t\t\t\t\t// on a new line.\n\t\t\t\t\t\tif (lastWasText && isText) {\n\t\t\t\t\t\t\tpieces[pieces.length - 1] += ret;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlastWasText = isText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pretty && hasLarge) {\n\t\t\tfor (let i = pieces.length; i--; ) {\n\t\t\t\tpieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length || html) {\n\t\ts = s + pieces.join('');\n\t} else if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length - 1) + ' />';\n\t}\n\n\tif (isVoid && !children && !html) {\n\t\ts = s.replace(/>$/, ' />');\n\t} else {\n\t\tif (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t\ts = s + `</${nodeName}>`;\n\t}\n\n\treturn s;\n}\n\nfunction getComponentName(component) {\n\treturn (\n\t\tcomponent.displayName ||\n\t\t(component !== Function && component.name) ||\n\t\tgetFallbackComponentName(component)\n\t);\n}\n\nfunction getFallbackComponentName(component) {\n\tlet str = Function.prototype.toString.call(component),\n\t\tname = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1];\n\tif (!name) {\n\t\t// search for an existing indexed name for the given component:\n\t\tlet index = -1;\n\t\tfor (let i = UNNAMED.length; i--; ) {\n\t\t\tif (UNNAMED[i] === component) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// not found, create a new indexed name:\n\t\tif (index < 0) {\n\t\t\tindex = UNNAMED.push(component) - 1;\n\t\t}\n\t\tname = `UnnamedComponent${index}`;\n\t}\n\treturn name;\n}\nrenderToString.shallowRender = shallowRender;\n\nexport default renderToString;\n\nexport {\n\trenderToString as render,\n\trenderToString as renderToStaticMarkup,\n\trenderToString,\n\tshallowRender\n};\n"],"names":["IS_NON_DIMENSIONAL","ENCODED_ENTITIES","encodeEntities","str","test","last","i","out","ch","length","charCodeAt","slice","indent","s","char","String","replace","isLargeString","ignoreLines","indexOf","JS_TO_CSS","styleObjToCss","prop","val","toLowerCase","undefined","getChildren","accumulator","children","Array","isArray","reduce","push","SHALLOW","shallow","UNNAMED","VOID_ELEMENTS","UNSAFE_NAME","XLINK","markAsDirty","this","__d","renderToString","render","shallowRender","vnode","context","EMPTY_ARR","opts","res","previousSkipEffects","options","__s","pretty","sortAttributes","_renderToStringPretty","_renderToString","__c","createComponent","__v","props","setState","forceUpdate","__h","getContext","nodeName","cxType","contextType","provider","value","__","inner","isSvgMode","selectValue","rendered","join","type","isComponent","renderRootComponent","Fragment","shallowHighOrder","c","__b","renderHook","__r","prototype","cctx","_dirty","state","_nextState","getDerivedStateFromProps","Object","assign","componentWillMount","count","call","getChildContext","diffed","getComponentName","propChildren","html","name","v","allAttributes","hooked","attributeHook","__html","xml","selected","Error","isVoid","voidElements","pieces","child","ret","substring","indentChar","attrs","keys","sort","sub","hasLarge","lastWasText","isText","component","displayName","Function","toString","match","index","getFallbackComponentName"],"mappings":"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"}